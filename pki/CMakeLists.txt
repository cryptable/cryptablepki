cmake_minimum_required(VERSION 3.8)
project(cryptablepki VERSION 0.1)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

if(NOT DEFINED COMMON_DIR)
    set(COMMON_DIR "${CMAKE_SOURCE_DIR}/../common")
endif(NOT DEFINED COMMON_DIR)

if(DEFINED CONAN)
    include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
    conan_basic_setup()
else(DEFINED CONAN)
    SET(OPENSSL_ROOT_DIR ${COMMON_DIR})
    find_package(OpenSSL)
    if(OPENSSL_FOUND)
        MESSAGE("Openssl Version: ${OPENSSL_VERSION}")
        MESSAGE("Openssl Include: ${OPENSSL_INCLUDE_DIR}")
        MESSAGE("Openssl Crypto library: ${OPENSSL_CRYPTO_LIBRARY}")
        MESSAGE("Openssl SSL library: ${OPENSSL_SSL_LIBRARY}")
        MESSAGE("Openssl Crypto libraries: ${OPENSSL_SSL_LIBRARIES}")
        MESSAGE("Openssl APPLINK SOURCES: ${OPENSSL_APPLINK_SOURCE}")
    endif(OPENSSL_FOUND)
endif(DEFINED CONAN)

include_directories(include src ${COMMON_DIR}/include)
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(LIBRARY_NAME  "${CMAKE_PROJECT_NAME}d")
else(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(LIBRARY_NAME  "${CMAKE_PROJECT_NAME}")
endif(CMAKE_BUILD_TYPE STREQUAL "Debug")

if (WIN32)
    set(WINDOWS_LIBS ws2_32.lib)
endif (WIN32)

add_subdirectory(src)
add_subdirectory(test)